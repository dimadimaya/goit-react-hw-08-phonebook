{"version":3,"file":"static/js/771.a451288a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"btn\":\"ContactForm_btn__wll+u\"};","import styles from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux/';\nimport { addContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport Typography from '@mui/material/Typography';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizedName = name.toLowerCase();\n\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(\n      addContact({\n        name: name,\n        number: number,\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{\n          textAlign: 'center',\n          color: 'rgb(0, 128, 255)',\n          fontWeight: '600',\n          margin: '16px 0',\n        }}\n      >\n        Welcome in your Phonebook\n      </Typography>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label>\n          Name\n          <input\n            value={name}\n            onChange={handleChangeName}\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Tel\n          <input\n            value={number}\n            onChange={handleChangeNumber}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\",\"list\":\"ContactList_list__csErn\"};","import styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button\n            className={styles.btn}\n            type=\"submit\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"find\":\"Filter_find__S9I33\"};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSearch } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport styles from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(filterSearch(event.target.value));\n  };\n\n  return (\n    <div className={styles.filter}>\n      <label className={styles.find}>\n        <p>Find contacts by name</p>\n        <input type=\"name\" value={filter} onChange={handleChange} />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && <Loader />}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","reset","Typography","variant","component","sx","textAlign","color","fontWeight","margin","onSubmit","event","preventDefault","normalizedName","toLowerCase","find","contact","alert","addContact","className","styles","value","onChange","currentTarget","type","title","required","pattern","ContactList","filteredContacts","includes","map","id","onClick","deleteContact","Filter","filterSearch","target","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}